RFC           Модель пользовательского интерфейса          Сентябрь 2025

         Минимальная модель виджетов пользовательского
             интерфейса и диспетчеризации событий

Аудитория: Разработчики UI-фреймворков и приложений

Статус этого мемо

   Этот документ публикуется как Информационный. Определения нормативных
   слов ДОЛЖЕН, НЕ ДОЛЖЕН, СЛЕДУЕТ, МОЖЕТ читаются согласно BCP 14
   [RFC2119, RFC8174], когда они написаны ПРОПИСНЫМИ.

Оглавление

   1   Аннотация ......................................................1
   2   Термины и определения ..........................................2
   3   Область действия ...............................................3
   4   Геометрическая модель ..........................................3
   4.1   Прямоугольник виджета ........................................3
   4.2   Согласование систем координат ................................3
   5   Глобальное состояние ...........................................4
   6   Типы событий ...................................................4
   7   Модель обработки и распространения событий .....................5
   7.1   Общий маршрут ................................................5
   7.2   Порядок обхода дочерних виджетов .............................5
   7.3   Результат обработки ..........................................5
   7.4   Условие остановки ............................................6
   8   Выбор целевого виджета .........................................6
   9   События указателя ..............................................6
   10   Отрисовка .....................................................6
   11   Расширяемость интерфейсов .....................................7
   12   Инварианты и требования к совместимости .......................7
   13   Соображения безопасности ......................................8
   14   Соображения производительности ................................8
   15   Соответствие ..................................................8
   16   Ссылки ........................................................9
   17   История изменений .............................................9

1. Аннотация

   Этот документ определяет минимальную, языконезависимую модель
   пользовательского интерфейса на основе иерархии "виджетов",
   глобального состояния UI и системы событий. Документ намеренно
   избегает привязки к конкретным типам данных или синтаксису
   конкретного языка.

   Спецификация описывает: геометрию и вложенность виджетов, типы
   событий, правила распространения событий сверху вниз, критерии
   "попадания" указателя и выбор целевого виджета.



Коллективный разум         Предложение черновика            [Страница 1]

RFC           Модель пользовательского интерфейса          Сентябрь 2025


2. Термины и определения

   Виджет
      Элемент пользовательского интерфейса с прямоугольной областью и
      необязательными дочерними виджетами.

   Глобальное состояние
      Синглтон-контекст, содержащий общие параметры окружения и
      служебные указатели (см. раздел 5).

   Иерархия
      Ориентированное дерево, где каждый виджет имеет не более одного
      родителя.

   Контекст диспетчеризации
      Структура, сопровождающая событие при обходе дерева

   Обработчик события
      Процедура, принимающая событие и возвращающая результат обработки
      (см. раздел 7.3).

   Попадание
      Факт, что координаты события попадают в прямоугольник виджета.

   Прямоугольник виджета (`frame`)
      Набор параметров `x`, `y`, `w`, `h`, где `x`, `y` заданы
      относительно прямоугольника родителя (см. раздел 4.1).

   Событие
      Сообщение о взаимодействии пользователя/системы
      (например, перемещение мыши, нажатие).

   Слой (Z-порядок)
      Упорядочение дочерних виджетов по убыванию "высоты"; элементы с
      большим Z располагаются "выше". Любой ребёнок считается выше
      своего родителя. Так, самым низким элементом считается
      корень иерархии.

   Целевой виджет (`target`)
      Наиболее вложенный виджет, удовлетворяющий правилам выбора цели
      (см. раздел 8).









Коллективный разум         Предложение черновика            [Страница 2]

RFC           Модель пользовательского интерфейса          Сентябрь 2025


3. Область действия

   Спецификация покрывает только:

      - Модель геометрии и вложенности;

      - Типы событий и их распространение;

      - Требования к выбору целевого виджета.

   Отрисовка, ввод с клавиатуры, фокус, доступность, анимации и разметка
   не нормируются, если явно не указано.

4. Геометрическая модель

4.1. Прямоугольник виджета

   Каждый виджет ДОЛЖЕН иметь прямоугольник `frame` в системе координат
   родителя. Параметры `w` и `h` отражают ширину и высоту прямоугольника
   соответственно, а также обязаны принимать строго положительные
   значения.

   Операция "содержит точку" ДОЛЖНА определять, лежит ли точка в
   прямоугольнике виджета, и ДОЛЖНА принимать точку в координатах
   родителя. Попадание точки (x, y) выполняется при условиях:

      x ∈ [frame.x, frame.x + frame.w)
      y ∈ [frame.y, frame.y + frame.h)

   Тип координат и правила округления не нормируются.

4.2. Согласование систем координат

   Под "абсолютными" координатами понимаются координаты в системе
   корневого виджета. Способ преобразования координат из абсолютных
   в "относительные" остаётся вне спецификации, но ДОЛЖЕН быть
   согласован для всей иерархии.

   Коллекция дочерних виджетов ДОЛЖНА быть упорядочена по
   невозрастающему Z. При равных Z порядок ДОЛЖЕН быть стабильным.










Коллективный разум         Предложение черновика            [Страница 3]

RFC           Модель пользовательского интерфейса          Сентябрь 2025


5. Глобальное состояние

   Глобальное состояние ДОЛЖНО предоставлять по крайней мере:

      - Состояние указателя мыши - Текущее положение и произвольные
        метаданные (кнопки, модификаторы и т.п.).

      - Поле `target` - Указатель на целевой виджет (см. раздел 8).

      - Поле `now` - Монотонные часы.

   Состояние МОЖЕТ содержать дополнительные поля и обратные вызовы
   (например, текущее время, глобальные обработчики).

   Если событие не несёт координат, обработчик использует последние
   координаты указателя из глобального состояния.

6. Типы событий

   Предлагается следующая классификация событий:

      - MouseMoveEvent: Перемещение указателя - содержит
        по крайней мере `x`, `y` (абсолютные координаты)

      - MouseDownEvent: Нажатие кнопки мыши - содержит
        по крайней мере `x`, `y` (абсолютные координаты)

      - MouseUpEvent: Отпускание кнопки мыши - может не содержать
        координат; при их отсутствии используются координаты указателя
        из глобального состояния

      - KeyDownEvent: Нажатие клавиши - содержит по крайней мере
        `scancode` (физический код), `mod` (битовая маска модификаций
        нажатой клавиши); реализация МОЖЕТ дополнительно указывать
        `keycode` (логический код) и `repeat`.

      - KeyUpEvent: Отпускание клавиши - содержит по крайней мере
        `scancode` (физический код), `mod` (битовая маска модификаций
        нажатой клавиши); реализация МОЖЕТ дополнительно указывать
        `keycode` (логический код).

      - IdleEvent: Системное событие простоя - содержит по крайней мере
        `dt` (неотрицательное время с последнего IdleEvent). Событие не
        участвует в выборе целевого виджета и ДОЛЖНО возвращать
        PROPAGATE.

      - QuitRequestEvent: Запрос на завершение приложения.



Коллективный разум         Предложение черновика            [Страница 4]

RFC           Модель пользовательского интерфейса          Сентябрь 2025


   Набор событий МОЖЕТ быть расширен иными типами (например, колесо
   мыши, перетаскивание), не нарушая настоящие правила распространения,
   а также разделён на множество типов событий, отличное от
   представленного.

7. Модель обработки и распространения событий

7.1. Общий маршрут

   События распространяются от корневого виджета вниз по дереву.

   Спецификация определяет два режима доставки указательных событий к
   дочерним виджетам:

      - HIT-PATH - передача потомкам выполняется только если родитель
        удовлетворяет проверке попадания для координат события;

      - LOCAL-GUARD - передача события выполняется для всех потомков, и
        каждый обработчик сам проверяет попадание.

   Настоящая спецификация нормирует единственный режим LOCAL-GUARD.
   Режим HIT-PATH допускается как расширение реализации и ДОЛЖЕН быть
   явно задокументирован (см. раздел 11). Режим HIT-PATH к IdleEvent и
   другим событиям, не содержащим положение указателя мыши, не применим.

   События жизненного цикла (например, QuitRequestEvent) доставляются
   как обычные события; их обработчики имеют возможность перехватить
   действие, тем самым отменив его обработку основным циклом, если такой
   имеется.

7.2. Порядок обхода дочерних виджетов

   Обход дочерних виджетов ДОЛЖЕН выполняться в порядке невозрастания Z.
   При равных Z обход ДОЛЖЕН выполняться в стабильном порядке коллекции.

7.3. Результат обработки

   Вводится абстрактный результат обработчика:

      - CONSUME - обработка завершена, дальнейшее распространение
        прекращается

      - PROPAGATE - событие может передаваться далее по текущему пути

   Реализация МОЖЕТ отображать эти результаты на булевы значения или
   перечисления, но поведение ДОЛЖНО соответствовать семантике выше.




Коллективный разум         Предложение черновика            [Страница 5]

RFC           Модель пользовательского интерфейса          Сентябрь 2025


7.4. Условие остановки

   При первом возвращении результата CONSUME любым участником цепочки
   распространение события ДОЛЖНО быть немедленно прекращено.

8. Выбор целевого виджета

   Перед обработкой каждого MouseMoveEvent поле `target` глобального
   состояния ДОЛЖНО быть сброшено (установлено в неопределённое/пустое
   значение).

   В ходе нисходящего обхода диспетчеризации MouseMoveEvent, виджет,
   удовлетворяющий одновременно:

      - Координаты события принадлежат прямоугольнику виджета;

      - Поле `target` сброшено.

   МОЖЕТ быть назначен в поле `target` глобального состояния. Если после
   обхода иерархии ни один виджет не назначил себя целевым виджетом, то
   таким виджетом ДОЛЖЕН быть назначен корень иерархии.

      Примечание: альтернативное правило (например, "первый виджет,
      у которого есть подходящий обработчик события") допустимо только
      как расширение и ДОЛЖНО быть явно задокументировано реализацией.

9. События указателя

   Если прямоугольник виджета не содержит точку события, то такой виджет
   НЕ ДОЛЖЕН обрабатывать это событие в том смысле, что он не должен
   изменять своё или глобальное состояние.

   Реализация МОЖЕТ отслеживать состояние наведения на уровне виджета
   как производное от результатов `MouseMoveEvent`, но это состояние не
   влияет на нормативные правила распространения, кроме как в рамках
   логики самой реализации.

   Реализация МОЖЕТ объединять высокочастотные указательные события
   (например, MouseMoveEvent), сохраняя последнее состояние к моменту
   доставки.

10. Отрисовка

   Виджет ДОЛЖЕН предоставлять операцию визуализации, принимающую
   абстрактный контекст вывода.





Коллективный разум         Предложение черновика            [Страница 6]

RFC           Модель пользовательского интерфейса          Сентябрь 2025


   Кадр формируется после дренажа очереди событий и доставки IdleEvent.
   Реализация МОЖЕТ синхронизировать темп кадров с внешним таймером или
   вертикальной синхронизацией. При отсутствии активных изменений
   реализация МОЖЕТ пропускать вывод кадра.

   Способ композиции не нормируется; порядок рисования ДОЛЖЕН
   соответствовать Z-порядку, если реализация не задекларировала иное
   (см. раздел 11).

11. Расширяемость интерфейсов

   Реализация МОЖЕТ добавлять к виджетам следующие (неисчерпывающие)
   механизмы:

      - Список дочерних виджетов (как в разделе 4);

      - Флаг наведения;

      - Обратные вызовы, с передачей ссылки на глобальное состояние;

      - Любые дополнительные данные состояния, не нарушающие семантику
        разделов 7-9.

   Реализация МОЖЕТ документировать альтернативные правила выбора цели
   и распространения (например, HIT-PATH).

   Такие отклонения ДОЛЖНЫ быть сформулированы так, чтобы не нарушать
   инварианты 12.

12. Инварианты и требования к совместимости

   Определяются следующие инварианты и требования к совместимости:

      - Геометрическая согласованность - преобразование координат
        событий и проверка попадания ДОЛЖНЫ быть непротиворечивыми
        по всей иерархии.

      - Корневой виджет определяет абсолютную систему координат.

      - Порядок детей - коллекция детей ДОЛЖНА поддерживать убывающий
        Z-порядок.

      - Для равных Z порядок вызовов ДОЛЖЕН быть детерминированным.

      - Остановка распространения - как только участник возвращает
        CONSUME, никакие другие обработчики в ветви не вызываются.
        Обработчики IdleEvent НЕ ДОЛЖНЫ завершать возвращать CONSUME.



Коллективный разум         Предложение черновика            [Страница 7]

RFC           Модель пользовательского интерфейса          Сентябрь 2025


      - Целевой виджет определяется только согласно разделу 8, если
        реализацией не задекларировано иное.

      - Каждому KeyUpEvent не обязательно предшествует доставленный
        KeyDown. Аналогично, Каждому MouseUpEvent не обязательно
        предшествует доставленный MouseDownEvent. Реализация ДОЛЖНА
        корректно отрабатывать такие случаи.

      - Автоповтор генерирует дополнительные KeyDownEvent с истинным
        значением параметра `repeat`. KeyUpEvent приходит один раз по
        отпусканию.

13. Соображения безопасности

   Обработчики событий НЕ ДОЛЖНЫ вызывать рекурсивную диспетчеризацию
   того же события без мер защиты от зацикливания.

   Мутации структуры дерева во время обхода ДОЛЖНЫ быть либо запрещены,
   либо выполняться через безопасный механизм (например, отложенное
   применение изменений).

14. Соображения производительности

   Реализации МОГУТ кешировать результаты проверки на попадание
   (например, через региональные индексы) при сохранении корректности
   разделов 7-9.

   Стабильность Z-порядка влечёт асимптотическую сложность O(n) обхода
   по количеству детей; для больших деревьев МОЖНО применять
   пространственные структуры (BVH/quad-tree), не меняя семантику.

   Реализации МОГУТ ограничивать `dt` для IdleEvent сверху и объединять
   события указателя мыши в пределах кадра.

   Реализации МОГУТ предоставлять обработчикам оценку бюджета времени до
   ближайшего кадра.

15. Соответствие

   Реализация считается соответствующей, если:

      - Соблюдает правила распространения (см. раздел 7), выбора цели
        (см. раздел 8) и фильтрации по попаданию (см. раздел 9);

      - Поддерживает минимум событий из раздела 6;

      - Предоставляет глобальное состояние с минимальными полями
        (см. раздел 5).


Коллективный разум         Предложение черновика            [Страница 8]

RFC           Модель пользовательского интерфейса          Сентябрь 2025


16. Ссылки

   [RFC2119] Key words for use in RFCs to Indicate Requirement Levels.

   [RFC8174] Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words.

17. История изменений

   - v0.1 (черновик): первичная формализация базового виджета, событий и
     диспетчеризации.

   - v0.2 (черновик): редакционное и нормативное уточнение минимальной
     модели.

   - v0.3 (черновик): формализация события простоя; исправление ошибок
     форматирования.

   - v0.4 (черновик): формализация события завершения работы и событий
     клавиатуры;































Коллективный разум         Предложение черновика            [Страница 9]
